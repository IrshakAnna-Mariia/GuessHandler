{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/amirshak/WebstormProjects/course/MobileGame/screens/StartGameScreen.js\";\n\nimport React, { useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { ViewComponent } from \"react-native-web/dist/index\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport color from \"../constants/color\";\nimport Input from \"../components/Input\";\nimport NumberComponent from \"../components/NumberComponent\";\n\nvar StartGameScreen = function StartGameScreen(props) {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      enteredValue = _useState2[0],\n      setEnteredValue = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirmed = _useState4[0],\n      setConfirmed = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedNumber = _useState6[0],\n      setSelectedNumber = _useState6[1];\n\n  var numberInputHandler = function numberInputHandler(inputText) {\n    setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n  };\n\n  var resetInputHandler = function resetInputHandler() {\n    setEnteredValue('');\n    setConfirmed(false);\n  };\n\n  var confirmInputHandler = function confirmInputHandler() {\n    var chosenNumber = parseInt(enteredValue);\n\n    if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n      Alert.alert('Invalid number!', 'Enter number between 1 and 99', [{\n        text: 'Okay',\n        style: 'destructive',\n        onPress: resetInputHandler\n      }]);\n      return;\n    }\n\n    setConfirmed(true);\n    setSelectedNumber(chosenNumber);\n    setEnteredValue('');\n  };\n\n  var confirmedOutput;\n\n  if (confirmed) {\n    confirmedOutput = React.createElement(Card, {\n      styles: styles.summaryContainer,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, React.createElement(Text, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, \"You selected\"), React.createElement(NumberComponent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, selectedNumber), React.createElement(Button, {\n      title: \"start game\",\n      onPress: function onPress() {\n        return props.onStartGame(selectedNumber);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }\n    }));\n  }\n\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      Keyboard.dismiss();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"The Game Screen\"), React.createElement(Card, {\n    styles: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"Select a Number\"), React.createElement(Input, {\n    styles: styles.input,\n    blurOnSubmit: true,\n    autoCapitalize: \"none\",\n    maxLenfth: 2,\n    onChangeText: numberInputHandler,\n    value: enteredValue,\n    keyboardType: \"number-pad\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  }, React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Reset\",\n    onPress: resetInputHandler,\n    color: color.accent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 29\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 25\n    }\n  }, React.createElement(Button, {\n    title: \"Confirm\",\n    onPress: confirmInputHandler,\n    color: color.primary,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 29\n    }\n  })))), confirmedOutput));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 20,\n    marginVertical: 10\n  },\n  container: {\n    width: 300,\n    maxWidth: '80%'\n  },\n  input: {\n    width: '80%'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    width: '100%',\n    justifyContent: 'space-between',\n    paddingHorizontal: 15\n  },\n  button: {\n    width: 100\n  },\n  summaryContainer: {\n    marginTop: 30,\n    alignItems: 'center'\n  }\n});\nexport default StartGameScreen;","map":{"version":3,"sources":["/Users/amirshak/WebstormProjects/course/MobileGame/screens/StartGameScreen.js"],"names":["React","useState","ViewComponent","Card","color","Input","NumberComponent","StartGameScreen","props","enteredValue","setEnteredValue","confirmed","setConfirmed","selectedNumber","setSelectedNumber","numberInputHandler","inputText","replace","resetInputHandler","confirmInputHandler","chosenNumber","parseInt","isNaN","Alert","alert","text","style","onPress","confirmedOutput","styles","summaryContainer","onStartGame","Keyboard","dismiss","screen","title","container","input","buttonContainer","button","accent","primary","StyleSheet","create","flex","padding","alignItems","fontSize","marginVertical","width","maxWidth","flexDirection","justifyContent","paddingHorizontal","marginTop"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport {Button, StyleSheet, Text, Keyboard, TouchableWithoutFeedback, View, ViewComponent, Alert} from 'react-native';\nimport Card from \"../components/Card\";\nimport color from \"../constants/color\";\nimport Input from \"../components/Input\";\nimport NumberComponent from \"../components/NumberComponent\";\n\nconst StartGameScreen = (props) => {\n    const [enteredValue, setEnteredValue] = useState('');\n    const [confirmed, setConfirmed] = useState(false);\n    const [selectedNumber, setSelectedNumber] = useState('');\n\n    const numberInputHandler = inputText => {\n        setEnteredValue(inputText.replace(/[^0-9]/g, ''));\n    }\n\n    const resetInputHandler = () => {\n        setEnteredValue('');\n        setConfirmed(false)\n    }\n\n    const confirmInputHandler = () => {\n        const chosenNumber = parseInt(enteredValue);\n        if (isNaN(chosenNumber) || chosenNumber <= 0 || chosenNumber > 99) {\n            Alert.alert(\n                'Invalid number!',\n                'Enter number between 1 and 99',\n                [{text: 'Okay', style: 'destructive', onPress: resetInputHandler}]\n            )\n            return;\n        }\n\n        setConfirmed(true);\n        setSelectedNumber(chosenNumber);\n        setEnteredValue('');\n    };\n\n    let confirmedOutput;\n\n    if (confirmed) {\n        confirmedOutput = (\n            <Card styles={styles.summaryContainer}>\n                <Text>You selected</Text>\n                <NumberComponent>{selectedNumber}</NumberComponent>\n                <Button title=\"start game\" onPress={() => props.onStartGame(selectedNumber)}/>\n            </Card>\n        )\n    }\n\n    return (\n        <TouchableWithoutFeedback onPress={() => {\n            Keyboard.dismiss();\n        }\n        }>\n            <View style={styles.screen}>\n                <Text style={styles.title}>The Game Screen</Text>\n                <Card styles={styles.container}>\n                    <Text>Select a Number</Text>\n                    <Input\n                        styles={styles.input}\n                        blurOnSubmit\n                        autoCapitalize=\"none\"\n                        maxLenfth={2}\n                        onChangeText={numberInputHandler}\n                        value={enteredValue}\n                        keyboardType='number-pad'\n                    />\n                    <View style={styles.buttonContainer}>\n                        <View style={styles.button}>\n                            <Button title='Reset' onPress={resetInputHandler} color={color.accent}/>\n                        </View>\n                        <View style={styles.button}>\n                            <Button title='Confirm' onPress={confirmInputHandler} color={color.primary}/>\n                        </View>\n                    </View>\n                </Card>\n                {confirmedOutput}\n            </View>\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        padding: 10,\n        alignItems: 'center'\n    },\n    title: {\n        fontSize: 20,\n        marginVertical: 10\n    },\n    container: {\n        width: 300,\n        maxWidth: '80%',\n    },\n    input: {\n        width: '80%',\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        width: '100%',\n        justifyContent: 'space-between',\n        paddingHorizontal: 15\n    },\n    button: {\n        width: 100,\n\n    },\n    summaryContainer: {\n        marginTop: 30,\n        alignItems: 'center'\n    },\n})\n\nexport default StartGameScreen;"]},"metadata":{},"sourceType":"module"}