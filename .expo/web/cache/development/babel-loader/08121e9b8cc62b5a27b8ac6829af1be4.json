{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/amirshak/WebstormProjects/course/MobileGame/screens/GameScreen.js\";\n\nimport React, { useRef, useState } from 'react';\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport NumberComponent from \"../components/NumberComponent\";\nimport Card from \"../components/Card\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var rndNum = Math.floor(Math.random() * (max - min)) + min;\n  return rndNum;\n};\n\nvar GameScreen = function GameScreen(props) {\n  var _useState = useState(generateRandomBetween(1, 100, props.userChoice)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n\n  var nextGuessHandler = function nextGuessHandler(direction) {\n    if (direction === 'lower' && currentGuess < props.userChoice || direction === 'greater' && currentGuess > props.userChoice) {\n      Alert.alert('Don\\'t lie!', 'You know, that this is wrong...', [{\n        text: 'Sorry!',\n        style: 'cancel'\n      }]);\n      return;\n    }\n\n    if (direction === 'lower') {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess;\n    }\n\n    var nextNumber = generateRandomBetween(currentLow.current, currentLow.current, currentGuess);\n    setCurrentGuess(nextNumber);\n  };\n\n  return React.createElement(View, {\n    style: styles.screen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }, \"Opponent`s Guess\"), React.createElement(NumberComponent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, currentGuess), React.createElement(Card, {\n    styles: styles.buttonContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, React.createElement(Button, {\n    title: \"LOWER\",\n    onPress: nextGuessHandler.bind(_this, 'lower'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }), React.createElement(Button, {\n    title: \"GREATER\",\n    onPress: nextGuessHandler.bind(_this, 'greater'),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20,\n    width: 300,\n    maxWidth: '80%'\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["/Users/amirshak/WebstormProjects/course/MobileGame/screens/GameScreen.js"],"names":["React","useRef","useState","NumberComponent","Card","generateRandomBetween","min","max","exclude","Math","ceil","floor","rndNum","random","GameScreen","props","userChoice","currentGuess","setCurrentGuess","currentLow","currentHigh","nextGuessHandler","direction","Alert","alert","text","style","current","nextNumber","styles","screen","buttonContainer","bind","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop","width","maxWidth"],"mappings":"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","sourcesContent":["import React, {useRef, useState} from 'react';\nimport {Alert, Button, StyleSheet, Text, TextInput, View} from 'react-native';\nimport NumberComponent from \"../components/NumberComponent\";\nimport Card from \"../components/Card\";\n\nconst generateRandomBetween = (min, max, exclude) => {\n    min = Math.ceil(min);\n    max = Math.floor(max);\n    const rndNum = Math.floor(Math.random() * (max-min)) + min;\n    /*if (rndNum === exclude) {\n        return generateRandomBetween(min, max, exclude)\n    } else {*/\n        return rndNum;\n    // }\n}\n\nconst GameScreen = (props) => {\n    const [currentGuess, setCurrentGuess] = useState(generateRandomBetween(1, 100, props.userChoice));\n\n    const currentLow = useRef(1);\n    const currentHigh = useRef(100);\n\n    const nextGuessHandler = (direction) => {\n        if ((direction === 'lower' && currentGuess < props.userChoice)\n            || (direction === 'greater' && currentGuess > props.userChoice) ) {\n            Alert.alert('Don\\'t lie!', 'You know, that this is wrong...',\n                [{text: 'Sorry!', style: 'cancel' }]\n            );\n            return;\n        }\n        if (direction === 'lower') {\n            currentHigh.current = currentGuess;\n        } else {\n            currentLow.current = currentGuess;\n        }\n        const nextNumber = generateRandomBetween(currentLow.current, currentLow.current, currentGuess);\n        setCurrentGuess(nextNumber);\n    }\n\n    return (\n        <View style={styles.screen}>\n            <Text>Opponent`s Guess</Text>\n            <NumberComponent>{currentGuess}</NumberComponent>\n            <Card styles={styles.buttonContainer}>\n                <Button title=\"LOWER\" onPress={nextGuessHandler.bind(this, 'lower')}/>\n                <Button title=\"GREATER\" onPress={nextGuessHandler.bind(this, 'greater')}/>\n            </Card>\n        </View>\n    )\n}\n\nconst styles = StyleSheet.create({\n    screen: {\n        flex: 1,\n        padding: 10,\n        alignItems: 'center'\n    },\n    buttonContainer: {\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 20,\n        width: 300,\n        maxWidth: '80%'\n\n    }\n})\n\nexport default GameScreen;"]},"metadata":{},"sourceType":"module"}